
db:    # The parameters needed to access to a Postgres database service that must be running.
  host: "localhost"
  port: "5432"
  dbname: "db"
  user: "dssuser"
  password: "XXXXXX"

auth:
  token_validation:   # These are the parameters for the validation of auth tokens received from user requests.
    token_issuer_public_keys_url: "https://chaimeleon-eu.i3m.upv.es/auth/realms/CHAIMELEON/protocol/openid-connect/certs"
      # The URL to the public keys of the authentication service that issue the tokens.
    kid: "U2yU60He9Irc8iNJ7zCBVUQEkXe9yq0XrHLu4f3i1gT"
      # The key ID (kid) is just for selecting which key have to be downloaded from the token_issuer_public_keys_url in the 
      # initialization in order to validate later the coming tokens. 
      # Usually there is only one key, so just go to the URL and copy the kid.
    audience: ["dataset-service"] 
      # The accepted values for the "audience" claim.
      # You should write here the client ID configured in the authentication service for this application (the dataset-service).
    issuer: "https://chaimeleon-eu.i3m.upv.es/auth/realms/CHAIMELEON"
      # The accepted value for the "issuer" claim.
    roles:   # Here you can customize the string that defines every role appearing in the token to allow the user to do things.
      use_datasets: "use_datasets"
      admin_datasets: "admin_datasets"
      superadmin_datasets: "superadmin_datasets"
      admin_users: "admin_users"
      admin_datasetAccess: "admin_datasetAccess"
  client:   # These are the parameters for login (get an auth token) as a service account in the auth service, 
            # in order to access other services like tracer or the keycloak admin API.
    auth_url: "https://chaimeleon-eu.i3m.upv.es/auth/realms/CHAIMELEON/protocol/openid-connect/token"
      # The url of authentication service.
    client_id: "dataset-service"
      # The client id of the dataset-service in the authentication service (it is like the "username" of a service account).
    client_secret: "XXXXXXXXXXXXXXXXXXXXXXX"
      # The client secret of the dataset-service client (it is like the "password" when login as a service account).
  admin_api_url: "https://chaimeleon-eu.i3m.upv.es/auth/admin/realms/CHAIMELEON/"
    # The URL to the authentication admin api, for querying user groups, etc.
    # Please note the auth.client params will be used for getting the token to access to this service.
    # Also note that the following roles must be added to the service account roles 
    # (and also in the "dedicated scope" of the client if "full scope" is not enabled): 
    #   "realm-management/query-groups", "realm-management/query-users", 
    #   "realm-management/view-users", "realm-management/view-clients".

tracer:
  url: "https://chaimeleon-eu.i3m.upv.es/tracer-service/tracer/"
    # The url of the tracer service for notifying dataset events. 
    # You can set it to empty to disable the notification to tracer.
    # Please note the auth.client params will be used for getting the token to access to this service.

zenodo:
  url: "https://sandbox.zenodo.org/"
    # The url of Zenodo service to submit depositions.
    # Usually "https://sandbox.zenodo.org/" for testing, and "https://zenodo.org/" for production.
  access_token: "XXXXXXXXXXXXXXXXXXXXXXX"
    # The access token of the Zenodo account used to publish datasets metada.
  community: ""
    # The community code which the publications will be related to.
    # Example: "chaimeleon_h2020"
    # Leave it empty if you don't want to specify one.
    # But it is recommended to create one for your project as a collection to easily find all the depositions.
  grant: ""
    # The grant code which the publication will be related to.
    # Example: "10.13039/501100000780::952172"
    # Leave it empty if you don't want to specify one.

self: 
  name: "dataset-service"
  host: "0.0.0.0"
  port: 11000
  log: 
    main_service:
        level: "DEBUG"
          # Possible levels from the most to the minimum verbose: DEBUG, INFO, WARN, ERROR, FATAL.
        file_path: "./log/dataset-service.log"
          # Destination file path.
        max_size: 10485760
          # Max size of file in bytes. When it get the max size it is closed and renamed appending ".1".
          # If the file ending with ".1" already exists, it is renamed to ".2", and so on until the max backup of 3.
    dataset_creation_job:
        level: "DEBUG"
        file_path: "./log/dataset-creation-job-%s.log"
          # In this case '%s' will be replaced by the dataset id.
        max_size: 10485760
  static_api_doc_dir_path: "/var/www/api-doc"
    # Absolute directory path where the API reference documentation is (an index.html file should be there).
    # It will be served when a request of path "/api-doc" is received.
  static_files_dir_path: "/var/www/dataset-service-ui"
    # Absolute directory path where the web UI static files are.
    # They will be served when a request of root path ("/") is received.
  dev_token: ""
    # Secret token for the POST "/api/set-ui" operation (for developers, to set the web UI static files).
    # If empty token, that operation is not allowed (404 returned), this way you can disable it.
  datalakeinfo_dir_path: "/var/www/datalakeinfo"
  datalakeinfo_token: ""
    # Secret token for the GET "/datalakeinfo" operation (for auditors, to get some statistics of datalake).
    # If empty token, that operation is not allowed (404 returned), this way you can disable it.
  datalake_mount_path: "/mnt/datalake"
  datasets_mount_path: "/mnt/datasets"
  eforms_file_name: "eforms.json"
  index_file_name: "index.json"
  dataset_link_format: "https://chaimeleon-eu.i3m.upv.es/dataset-service/datasets/%s/details"
    # Url format of public available details of a dataset (using the endpoint of the WebUI, the Dataset-explorer)
    # It is used for the url returned in the dataset creation POST, 
    # and also for the links incluided in the publication submited to Zenodo.
  eucaim_search_token: ""
    # Secret token for the POST "/datasets/eucaimSearch" operation (custom search for EUCAIM project).
    # If empty token, that operation is not allowed (404 returned), this way you can disable it.
  default_license_id: ""
    # The default license assigned to new datasets. The user can change it later.
    # Example: "1"
    # Leave it empty if you don't want to specify one license as default.
