apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
spec:
  storageClassName: cephfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dataset-service-data
spec:
  storageClassName: cephfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
      
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      volumes:
        - name: postgres-data-pv
          persistentVolumeClaim:
            claimName: postgres-data
      containers:
      - name: db
        image: "postgres:12"
        env:
        - name: POSTGRES_DB
          value: dataset-service
        - name: POSTGRES_USER
          value: dataset-service-user
        - name: POSTGRES_PASSWORD
          value: "XXXXXX"
        resources: {}
        ports:
          - containerPort: 5432
            # standard postgres DB port
            name: "dbport"
        volumeMounts:
          - mountPath: "/var/lib/postgresql/data"
            name: postgres-data-pv
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432

---
apiVersion: v1
kind: Secret
metadata:
  name: dataset-service-ceph-user-secret
type: Opaque
stringData:
  key: "XXXXXXXX"
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dataset-service-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dataset-service-backend
  template:
    metadata:
      labels:
        app: dataset-service-backend
    spec:
      volumes:
        - name: dataset-service-data-volume
          persistentVolumeClaim:
            claimName: dataset-service-data
        - name: datalake-volume
          cephfs:
            path: "/data"
            monitors: 
              - "192.168.3.8:6789"
            user: dataset-service
            secretRef:
              name: dataset-service-ceph-user-secret
            readOnly: false
        - name: datasets-volume
          cephfs:
            path: "/datasets"
            monitors: 
              - "192.168.3.8:6789"
            user: dataset-service
            secretRef:
              name: dataset-service-ceph-user-secret
            readOnly: false
      containers:
        - name: dataset-service-backend
          image:  chaimeleon-eu.i3m.upv.es:10443/chaimeleon-services/dataset-service-backend:0.35
          ports:
            - containerPort: 11000
              name: dssport
          volumeMounts:
          - mountPath: "/dataset-service/log"
            subPath: "log"
            name: dataset-service-data-volume
          - mountPath: "/var/www/dataset-service-ui"
            subPath: "ui"
            name: dataset-service-data-volume
          - mountPath: "/mnt/datalake"
            name: datalake-volume
          - mountPath: "/mnt/datasets"
            name: datasets-volume
          env:
          - name: DATASET_SERVICE_CONFIG
            value: |
              { "db": { "host": "db", "port": 5432, "dbname": "dataset-service", "user": "dataset-service-user", "password": "XXXXXX" },
                "auth": {
                    "token_issuer_public_keys_url": "https://chaimeleon-eu.i3m.upv.es/auth/realms/CHAIMELEON/protocol/openid-connect/certs",
                    "kid": "T7yU60He9Irc8iNJ7zCBVUQEkXe9yq0XrHLu4fBi1gU",
                    "audience": ["dataset-service"],
                    "issuer": "https://chaimeleon-eu.i3m.upv.es/auth/realms/CHAIMELEON"
                },
                "tracer": {
                    "url": "https://chaimeleon-eu.i3m.upv.es/tracer-service/tracer/",
                    "auth_url": "https://chaimeleon-eu.i3m.upv.es/auth/realms/CHAIMELEON/protocol/openid-connect/token",
                    "client_id": "dataset-service",
                    "client_secret": "XXXXXXXX"
                },
                "self": { 
                    "port": 11000, 
                    "log": { "level": "DEBUG", "file": "./log/dataset-service.log" },
                    "static_files_dir_path": "/var/www/dataset-service-ui",
                    "datalake_mount_path": "/mnt/datalake",
                    "datasets_mount_path": "/mnt/datasets"
                }
              }
      restartPolicy: Always
      
---
apiVersion: v1
kind: Service
metadata:
  name: dataset-service-backend-service
spec:
  selector:
    app: dataset-service-backend
  ports:
  - port: 11000
    protocol: TCP
    targetPort: dssport

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: dataset-service-backend-proxy
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
#   nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  tls:
  - hosts:
    - chaimeleon-eu.i3m.upv.es
#     secretName:  chaimeleon-eu.i3m.upv.es     # letsencryp-cert-tls, comment to use the default, which is set in the ingress controller param --default-ssl-certificate
  rules:
    - host: chaimeleon-eu.i3m.upv.es
      http:
        paths:
          - path: /dataset-service/?(.*)
            backend:
              serviceName: dataset-service-backend-service
              servicePort: 11000

